

-- ksql
-- Access ksqldb cli
docker exec -it ksqldb-cli ksql http://mbp.local:8088



-- start kcat pod manually, this has been replaced with a container as part of the docker-compose.yaml
docker run -d \
  --network aws-kafka-confluent_default \
  --name kafkacat \
  --entrypoint bash -i \
  confluentinc/cp-kcat:latest
  
  
-- now added to docker-compose.yaml file
docker exec -t kafkacat  kcat \
  -b broker:29092 \
  -t orders_spooldir_02 \
  -C -o-1 -J \
  -s key=s -s value=avro \
  -r http://schema-registry:8081 \
  | jq '.payload'





-- Working with time/dates and timestamps in ksqldb
-- https://www.confluent.io/blog/ksqldb-2-0-introduces-date-and-time-data-types/

-- salesbaskets
CREATE STREAM json_salesbaskets (
	   	InvoiceNumber VARCHAR,
	 	SaleDateTime VARCHAR,
	 	SaleTimestamp VARCHAR,
	  	TerminalPoint VARCHAR,
	   	Nett DOUBLE,
	  	Vat DOUBLE,
	 	Total DOUBLE,
       	Store STRUCT<
       		Id VARCHAR,
     		Name VARCHAR>,
     	Clerk STRUCT<
     		Id VARCHAR,
          	Name VARCHAR>,
    	BasketItems ARRAY< STRUCT<
			Id VARCHAR,
        	Name VARCHAR,
          	Brand VARCHAR,
          	Category VARCHAR,
         	Price DOUBLE,
        	Quantity DOUBLE >>) 
WITH (KAFKA_TOPIC='json_salesbaskets',
		    VALUE_FORMAT='JSON_SR',
        	PARTITIONS=1);

       
-- salespayments       
CREATE STREAM json_salespayments (
	      	InvoiceNumber VARCHAR,
	      	FinTransactionID VARCHAR,
	      	PayDateTime VARCHAR,
			PayTimestamp VARCHAR,
	      	Paid DOUBLE      )
WITH (KAFKA_TOPIC='json_salespayments',
       		VALUE_FORMAT='JSON_SR',
       		PARTITIONS=1);
     
CREATE STREAM json_salescompleted1 WITH (KAFKA_TOPIC='json_salescompleted1',
       VALUE_FORMAT='JSON_SR',
       PARTITIONS=1)
       as  
select 
	b.invoiceNumber InvNumber, 
	b.saleDateTime,
	b.saleTimestamp, 
	b.terminalPoint,
	b.nett,
	b.vat,
	b.total,
	b.store,
	b.clerk,
	b.basketItems,
	p.finTransactionId,
	p.payDateTime,
	p.payTimestamp,
	p.paid
from 
	json_salespayments p INNER JOIN
	json_salesbaskets b
WITHIN 7 DAYS 
on b.invoiceNumber = p.invoiceNumber
emit changes;



docker exec -t kafkacat \
  kcat \
  -b broker:29092 \
  -t json_salesbaskets \
  -C 
  -s key=s -s value=json \
  -r http://schema-registry:8081 


docker exec -t kafkacat \
  kcat \
  -b broker:29092 \
  -t json_salespayments \
  -C 
  -r http://schema-registry:8081 


docker exec -t kafkacat \
  kcat \
  -b broker:29092 \
  -t json_salescompleted1 \
  -C 


